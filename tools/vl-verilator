#!/usr/bin/python3

import os
import sys
import subprocess

verilua_path = os.getenv("VERILUA_HOME")
libpath = os.getenv("VERILUA_HOME") + "/shared"
luapath = os.getenv("VERILUA_HOME") + "/luajit2.1"
liblua_path = luapath + "/lib"
assert libpath != None, "[vl-verilator] cannot find VERILUA_HOME!"
assert os.path.exists(libpath + "/liblua_vpi.so"), "[vl-verilator] cannot find liblua_vpi.so in " + libpath

CFLAGS = ""
LDFLAGS = ""

CFLAGS += f"-I{luapath}/include "
CFLAGS += f"-I{verilua_path}/src/include "
CFLAGS += f"-I{verilua_path}/src/include/sol "
CFLAGS += f"-I{verilua_path}/extern/fmt/include "
CFLAGS += f"-I{verilua_path}/extern/argparse/include "
CFLAGS += f"-I{verilua_path}/extern/LuaBridge/Source "
CFLAGS += f"-I{verilua_path}/extern/LuaBridge/Source/LuaBridge "

LDFLAGS += f"-L{liblua_path} -lluajit-5.1 "
LDFLAGS += f"-L{libpath} -llua_vpi "
LDFLAGS += f" -L{verilua_path}/extern/fmt/build -lfmt"

cmd_list = ["verilator"] + [
                        "--vpi",
                        "--public-flat-rw",
                        "-LDFLAGS", LDFLAGS, 
                        "-CFLAGS", CFLAGS ] + \
            sys.argv[1:]
cmd = " ".join(cmd_list)
print(f"[vl-verilator] cmd is {cmd} ")

exit(subprocess.call(cmd_list))
