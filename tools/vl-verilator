#!/usr/bin/env python3

import os
import sys
import subprocess
import shutil

RED = "\033[31m"
GREEN = "\033[32m"
YELLOW = "\033[33m"
BLUE = "\033[34m"
RESET = "\033[0m"

verilua_path = os.getenv("VERILUA_HOME")

libpath = verilua_path + "/shared"
luapath = verilua_path + "/luajit-pro/luajit2.1"
liblua_path = luapath + "/lib"

assert os.path.exists(liblua_path + "/libluajit-5.1.so"), "[vl-verilator] cannot find liblua in " + liblua_path
assert os.path.exists(libpath + "/libverilua_verilator.so"), "[vl-verilator] cannot find libverilua_verilator.so in " + libpath

CFLAGS = ""
LDFLAGS = ""

CFLAGS += f"-I{luapath}/include -I{luapath}/include/luajit-2.1 "
CFLAGS += f"-I{verilua_path}/src/include "
CFLAGS += f"-I{verilua_path}/conan_installed/include "

LDFLAGS += f"-Wl,-rpath,{libpath} -L{libpath} -Wl,--no-as-needed -lverilua_verilator "
LDFLAGS += f"-Wl,-rpath,{liblua_path} -L{liblua_path} -Wl,--no-as-needed -lluajit-5.1 "

verilator = shutil.which("verilator")
assert verilator != None, "[vl-verilator] cannot find `verilator` in PATH"

cmd_list = [verilator] + [
    "--vpi",
    "--public-flat-rw",
    "+define+VERILUA",
    "-LDFLAGS", LDFLAGS,
    "-CFLAGS", CFLAGS] + sys.argv[1:]

cmd = " ".join(cmd_list)

PREFIX = f"[{YELLOW}vl-verilator{RESET}]"
print(f'''
{PREFIX} libpath: {GREEN}{libpath}{RESET}
{PREFIX} liblua_path: {GREEN}{liblua_path}{RESET}
{PREFIX} verilua_path: {GREEN}{verilua_path}{RESET}
{PREFIX} cmd:
{GREEN}{cmd}{RESET}
''', flush = True)

exit(subprocess.call(cmd_list))
