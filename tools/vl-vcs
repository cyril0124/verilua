#!/usr/bin/env python3

import os
import sys
import subprocess
import base64

def execute_cmd(cmd):
    return subprocess.run(cmd, shell=True, capture_output=True, text=True)

def encode_string(s):
    return base64.b64encode(s.encode()).decode()

def decode_string(s):
    return base64.b64decode(s.encode()).decode()

libpath = os.getenv("VERILUA_HOME") + "/shared"
luapath = os.getenv("VERILUA_HOME") + "/luajit-pro/luajit2.1"
libpath_lua = luapath + "/lib"
assert libpath != None, "[vl-vcs] cannot find VERILUA_HOME!"
assert os.path.exists(libpath + "/liblua_vpi_vcs.so"), "[vl-vcs] cannot find liblua_vpi_vcs.so in " + libpath

subfix = encode_string(os.path.abspath(os.curdir))
pli_tab = f"/tmp/verilua_{subfix}/pli.tab"
os.system(f"mkdir -p /tmp/verilua_{subfix} && touch {pli_tab}; echo \"acc+=rw,wn:*\" > {pli_tab} ")

vcs = os.getenv("VCS_HOME") + "/bin/vcs"
# cmd_list = [vcs] + sys.argv[1:] + [
#                         # "+acc+1", 
#                         "-debug_access+all", 
#                         # "-CFLAGS", f"\"\"",
#                         "-LDFLAGS", f'-L{libpath_lua} -lluajit-5.1 -L{libpath} -llua_vpi_vcs',
#                         "-load", libpath + "/liblua_vpi_vcs.so", 
#                         "-lluajit-5.1", 
#                         "-llua_vpi_vcs", 
#                         # "-P", pli_tab
# ]

cmd_list = [vcs] + sys.argv[1:] + [
                        "-debug_access+all", 
                        "-LDFLAGS", f'\"-L{libpath}\"', 
                        "-LDFLAGS",  '\"-llua_vpi_vcs\"',
                        "-LDFLAGS", f'\"-L{libpath_lua}\"', 
                        "-LDFLAGS",  '\"-lluajit-5.1\"', 
                        "-LDFLAGS", '\"-lstdc++\"',
                        "-load", libpath + "/liblua_vpi_vcs.so", 
]

cmd = " ".join(cmd_list)
print(f"[vl-vcs] cmd is {cmd} ")
execute_cmd(f"echo {cmd} > vl-vcs.cmd")

exit(subprocess.call(cmd_list))
