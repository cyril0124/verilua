#!/usr/bin/env python3

import os
import sys
import subprocess

has_vlt_file = any(arg.endswith('.vlt') for arg in sys.argv[1:])
if not has_vlt_file:
    raise ValueError("\033[31m" + "\n\
        [vl-verilator-p Error] No *.vlt file exist! The *.vlt file is used to specify the access permission for the rtl which is indispensible for vpi usage.\n\
        See https://veripool.org/guide/latest/exe_verilator.html#configuration-files for more detailed info." + "\033[0m"
    )

verilua_path = os.getenv("VERILUA_HOME")
libpath = verilua_path + "/shared"
luapath = verilua_path + "/luajit2.1"
liblua_path =luapath + "/lib"
assert libpath != None, "[vl-verilator-p] cannot find VERILUA_HOME!"
assert os.path.exists(libpath + "/liblua_vpi.so"), "[vl-verilator-p] cannot find liblua_vpi.so in " + libpath

CFLAGS = ""
LDFLAGS = ""

CFLAGS += f"-I{luapath}/include "
CFLAGS += f"-I{verilua_path}/src/include "
CFLAGS += f"-I{verilua_path}/src/include/sol "
CFLAGS += f"-I{verilua_path}/vcpkg/installed/x64-linux/include "
CFLAGS += f"-I{verilua_path}/extern/LuaBridge/Source "
CFLAGS += f"-I{verilua_path}/extern/LuaBridge/Source/LuaBridge "

LDFLAGS += f"-L{libpath} -llua_vpi "
LDFLAGS += f"-L{liblua_path} -lluajit-5.1 "
LDFLAGS += f" -L{verilua_path}/vcpkg/installed/x64-linux/lib -lfmt "

cmd_list = ["verilator"] + [
                        "--vpi", 
                        "-LDFLAGS",LDFLAGS, 
                        "-CFLAGS", CFLAGS ] + \
            sys.argv[1:]
cmd = " ".join(cmd_list)
print(f"[vl-verilator-p] cmd is {cmd} ")

exit(subprocess.call(cmd_list))
