name: Regression

on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ 'ubuntu-22.04', 'ubuntu-24.04' ]
        verilator-version: [ 'v5.016', 'v5.026', 'v5.032', 'v5.038' ]
        iverilog-tag: [ 's20250103' ]
        # iverilog-tag: [ 's20250103', 'master' ]

    env:
      XMAKE_VERSION: '2.9.9'
      VERILATOR_PATH: '/tmp/verilator-install'
      IVERILOG_PATH: '/tmp/iverilog-install'
      CONAN_LIBS_PATH: '/tmp/conan_installed'

    steps:
      - name: Install dependencies
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt update
          sudo apt install -y libboost-all-dev

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Setup xmake
        uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: ${{ env.XMAKE_VERSION }}
          actions-cache-folder: '.xmake-cache'
          actions-cache-key: ${{ matrix.os }}-xmake-${{ env.XMAKE_VERSION }}

      - name: Setup rust
        uses: actions-rs/toolchain@v1
        with:
            profile: minimal
            toolchain: stable
            override: true

      # -----------------------------------------------
      # Cache verilator
      # -----------------------------------------------
      - name: Cache Verilator installation
        id: cache-verilator
        uses: actions/cache@v4
        with:
          path: /tmp/verilator-install
          key: ${{ matrix.os }}-verilator-${{ matrix.verilator-version }}
      - name: Setup Verilator
        if: steps.cache-verilator.outputs.cache-hit != 'true'
        run: |
          sudo apt-get install -y --no-install-recommends help2man make g++ perl python3 autoconf flex bison libfl2 libfl-dev zlib1g zlib1g-dev
          git clone https://github.com/verilator/verilator.git
          cd verilator
          git reset --hard ${{ matrix.verilator-version }}
          autoconf
          ./configure --prefix=${{ env.VERILATOR_PATH }}
          make -j $(nproc)
          make install
      - name: Add Verilator to PATH
        run: |
          echo "PATH=${{ env.VERILATOR_PATH }}/bin:$PATH" >> $GITHUB_ENV
          export PATH=${{ env.VERILATOR_PATH }}/bin:$PATH
          which verilator

      # -----------------------------------------------
      # Cache iverilog
      # -----------------------------------------------
      - name: Cache Icarus Verilog installation
        id: cache-iverilog
        uses: actions/cache@v4
        with:
          path: ${{ env.IVERILOG_PATH }}
          key: ${{ matrix.os }}-iverilog-${{ matrix.iverilog-tag }}
      - name: Setup iverilog
        if: steps.cache-iverilog.outputs.cache-hit != 'true'
        run: |
          sudo apt-get install -y --no-install-recommends g++ gperf flex bison make autoconf
          git clone https://github.com/steveicarus/iverilog.git
          cd iverilog
          git reset --hard ${{ matrix.iverilog-tag }}
          bash ./autoconf.sh
          bash ./configure --prefix=${{ env.IVERILOG_PATH }}
          make -j $(nproc)
          make install
      - name: Add Iverilog to PATH
        run: |
          echo "PATH=${{ env.IVERILOG_PATH }}/bin:$PATH" >> $GITHUB_ENV
          export PATH=${{ env.IVERILOG_PATH }}/bin:$PATH
          which iverilog

          # Used by verilua
          echo "IVERILOG_HOME=${{ env.IVERILOG_PATH }}" >> $GITHUB_ENV

      # -----------------------------------------------
      # Cache conan libs
      # -----------------------------------------------
      - name: Cache conan libs
        id: cache-conan-libs
        uses: actions/cache@v4
        with:
          path: ${{ env.CONAN_LIBS_PATH }}
          key: ${{ matrix.os }}-conan-libs-${{ hashFiles('**/conanfile*')}}
      - name: Check conan libs
        if: steps.cache-conan-libs.outputs.cache-hit == 'true'
        run: |
          ls -l ${{ env.CONAN_LIBS_PATH }}
          cp -r ${{ env.CONAN_LIBS_PATH }} .
          echo "CI_USE_CONAN_CACHE=1" >> $GITHUB_ENV

      - name: Install verilua
        run: |
          xmake install verilua

      - name: Update conan libs cache files
        if: steps.cache-conan-libs.outputs.cache-hit != 'true'
        run: |
          cp -r ./conan_installed ${{ env.CONAN_LIBS_PATH }}

      - name: Load env variables
        run: |
          ls -l

          echo "VERILUA_HOME=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          export VERILUA_HOME=$GITHUB_WORKSPACE # Make this available to current shell
          echo "VERILUA_HOME is: $VERILUA_HOME"

          source ./activate_verilua.sh

          echo "PATH=$PATH" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=$LD_LIBRARY_PATH" >> $GITHUB_ENV
          echo "LUA_PATH=$LUA_PATH" >> $GITHUB_ENV
          echo "LUA_CPATH=$LUA_CPATH" >> $GITHUB_ENV
          echo "CONFIG_TCCDIR=$CONFIG_TCCDIR" >> $GITHUB_ENV

          echo "PATH is: $PATH"
          echo "LD_LIBRARY_PATH is: $LD_LIBRARY_PATH"
          echo "LUA_PATH is: $LUA_PATH"
          echo "LUA_CPATH is: $LUA_CPATH"
          echo "CONFIG_TCCDIR is: $CONFIG_TCCDIR"

      - name: Test verilua (Basic test)
        run: |
          xmake run test

      - name: Install mill
        run: |
          curl -L https://github.com/com-lihaoyi/mill/releases/download/0.11.2/0.11.2 > mill
          chmod +x mill
          sudo mv mill /usr/local/bin
          which mill
          mill --version

      - name: Test verilua (NHL2)
        run: |
          git clone https://github.com/OpenXiangShan-Nanhu/NHL2.git

          cd NHL2
          echo "Current dir is: $(pwd)"
          ls -l

          export SIM=iverilog
          xmake run -P . init
          xmake build -P . Slice
          xmake build -P . TestSlice
          xmake run -P . TestSlice
          
